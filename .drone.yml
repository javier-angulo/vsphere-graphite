kind: pipeline
name: checkups
workspace:
  base: /go
  path: src/github.com/cblomart/vsphere-graphite

clone:
  disable: true

steps:
  # restore from latest build
  - restore:
    name: restore
    image: cblomart/gobasebuild
    pull: always
    environment:
      MC_HOST_s3:
        from_secret: s3_host
    commands:
    - last=$(mc find s3/vsphere-graphite --regex "[0-9]+/workspace.tgz" --newer-than 3d | tail -1)
    - if [ ! -z "$last" ]; then mc cat $last | tar xzf - -C /; fi
  # clone from git
  - clone:
    name: clone
    image: plugins/git
    tags: true
  # check dependencies
  - dependancies:
    name: dependancies
    image: cblomart/gobasebuild
    commands:
    - go version
    - make godeps
    - go generate ./...
    - tags=$(git rev-parse --short HEAD)
    - if [ ! -z "$DRONE_TAG" ]; then tags="$tags,$DRONE_TAG,latest"; fi
    - echo $tags | tee .tags
  # do the checkups
  - checkups:
    name: checks
    image: cblomart/gobasebuild
    commands:
    - make checks
  # save workspace for further runs
  - save:
    name: save
    image: cblomart/gobasebuild
    environment:
      MC_HOST_s3:
        from_secret: s3_host
    commands:
    - mc mb -p s3/vsphere-graphite
    - tar czf - /go | mc pipe s3/vsphere-graphite/$DRONE_BUILD_NUMBER/workspace.tgz


---
kind: pipeline
name: build-linux
workspace:
  base: /go
  path: src/github.com/cblomart/vsphere-graphite

clone:
  disable: true

steps:
  - restore:
    name: restore
    image: cblomart/gobasebuild
    pull: always
    environment:
      MC_HOST_s3:
        from_secret: s3_host
    commands:
    - mc cat s3/vsphere-graphite/$DRONE_BUILD_NUMBER/workspace.tgz | tar xzf - -C /
  - build:
    name: build
    image: cblomart/gobasebuild
    commands:
    - make build-linux-amd64
  - upx:
    name: upx
    image: cblomart/gobasebuild
    commands:
    - make upx-linux-amd64
    when:
      event: [ tag ]
  - push:
    name: push
    image: plugins/docker
    settings:
      username: cblomart
      password:
        from_secret: docker_password
      repo: cblomart/vsphere-graphite
      build_args:
        - os=linux
        - arch=amd64
    when:
      event:
       exclude:
         - pull_request
  - pack:
    name: pack
    image: cblomart/gobasebuild
    commands:
    - make dist-linux-amd64
    - cp /tmp/vsphere-graphite_*.tgz releases/
    - for f in $(ls -1 releases/*.tgz); do md5sum $f | sed "s#/.*/##g" > "$f.md5"; sha256sum $f | sed "s#/.*/##g" > "$f.sha256"; done
    when:
      event: [ tag ]
  - release:
    name: release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_secret
      files:
        - releases/*.tgz
        - releases/*.md5
        - releases/*.sha256
    when:
      event: [ tag ]  

depends_on:
  - checkups

---
kind: pipeline
name: build-arm
workspace:
  base: /go
  path: src/github.com/cblomart/vsphere-graphite

clone:
  disable: true

steps:
  - restore:
    name: restore
    image: cblomart/gobasebuild
    pull: always
    environment:
      MC_HOST_s3:
        from_secret: s3_host
    commands:
    - mc cat s3/vsphere-graphite/$DRONE_BUILD_NUMBER/workspace.tgz | tar xzf - -C /
  - build:
    name: build
    image: cblomart/gobasebuild
    commands:
    - make build-linux-arm
  - upx:
    name: upx
    image: cblomart/gobasebuild
    commands:
    - make upx-linux-arm
  - push:
    name: push
    image: plugins/docker
    settings:
      username: cblomart
      password:
        from_secret: docker_password
      repo: cblomart/rpi-vsphere-graphite
      build_args:
        - os=linux
        - arch=arm
  - pack:
    name: pack
    image: cblomart/gobasebuild
    commands:
    - make dist-linux-arm
    - cp /tmp/vsphere-graphite_*.tgz releases/
    - for f in $(ls -1 releases/*.tgz); do md5sum $f | sed "s#/.*/##g" > "$f.md5"; sha256sum $f | sed "s#/.*/##g" > "$f.sha256"; done
  - release:
    name: release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_secret
      files:
        - releases/*.tgz
        - releases/*.md5
        - releases/*.sha256

trigger:
  event: [ tag ]

depends_on:
  - checkups

---
kind: pipeline
name: build-windows
workspace:
  base: /go
  path: src/github.com/cblomart/vsphere-graphite

clone:
  disable: true

steps:
  - restore:
    name: restore
    image: cblomart/gobasebuild
    pull: always
    environment:
      MC_HOST_s3:
        from_secret: s3_host
    commands:
    - mc cat s3/vsphere-graphite/$DRONE_BUILD_NUMBER/workspace.tgz | tar xzf - -C /
  - build:
    name: build
    image: cblomart/gobasebuild
    commands:
    - make build-windows-amd64
  - upx:
    name: upx
    image: cblomart/gobasebuild
    commands:
    - make upx-windows-amd64
  - pack:
    name: pack
    image: cblomart/gobasebuild
    commands:
    - make dist-windows-amd64
    - cp /tmp/vsphere-graphite_*.tgz releases/
    - for f in $(ls -1 releases/*.tgz); do md5sum $f | sed "s#/.*/##g" > "$f.md5"; sha256sum $f | sed "s#/.*/##g" > "$f.sha256"; done
  - release:
    name: release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_secret
      files:
        - releases/*.tgz
        - releases/*.md5
        - releases/*.sha256

trigger:
  event: [ tag ]

depends_on:
  - checkups

---
kind: pipeline
name: build-darwin
workspace:
  base: /go
  path: src/github.com/cblomart/vsphere-graphite

clone:
  disable: true

steps:
  - restore:
    name: restore
    image: cblomart/gobasebuild
    pull: always
    environment:
      MC_HOST_s3:
        from_secret: s3_host
    commands:
    - mc cat s3/vsphere-graphite/$DRONE_BUILD_NUMBER/workspace.tgz | tar xzf - -C /
  - build:
    name: build
    image: cblomart/gobasebuild
    commands:
    - make build-darwin-amd64
  - upx:
    name: upx
    image: cblomart/gobasebuild
    commands:
    - make upx-darwin-amd64
  - pack:
    name: pack
    image: cblomart/gobasebuild
    commands:
    - make dist-darwin-amd64
    - cp /tmp/vsphere-graphite_*.tgz releases/
    - for f in $(ls -1 releases/*.tgz); do md5sum $f | sed "s#/.*/##g" > "$f.md5"; sha256sum $f | sed "s#/.*/##g" > "$f.sha256"; done
  - release:
    name: release
    image: plugins/github-release
    settings:
      api_key:
        from_secret: github_secret
      files:
        - releases/*.tgz
        - releases/*.md5
        - releases/*.sha256

trigger:
  event: [ tag ]

depends_on:
  - checkups

---
kind: pipeline
name: cleanup
workspace:
  base: /go
  path: src/github.com/cblomart/vsphere-graphite

clone:
  disable: true

steps:
  - cleanup-s3:
    name: cleanup s3
    image: cblomart/gobasebuild
    pull: always
    environment:
      MC_HOST_s3:
        from_secret: s3_host
    commands:
    - mc rm -r --force --older-than 3d s3/vsphere-graphite 
  - cleanup-docker-amd64:
    name: cleanup docker amd64
    image: cblomart/registry-cleanup
    settings:
      password:
        from_secret: docker_password
  - cleanup-docker-arm:
    name: cleanup docker arm
    image: cblomart/registry-cleanup
    settings:
      password:
        from_secret: docker_password
      repo: cblomart/rpi-vsphere-graphite
      
depends_on:
  - build-linux
  - build-arm
  - build-windows
  - build-darwin

trigger:
  status:
  - success
  - failure
  event:
    exclude:
    - pull_request
